--- /home/zn23/DISORDER/Gadgetron_Framework/compare/InlineReconPipeline.m
+++ /home/zn23/DISORDER/Gadgetron_Framework/compare/reconPipeline.m
@@ -1,5 +1,4 @@
-function rec=InlineReconPipeline(twix_like)
-% This is a pipeline modified for inline integration, it will be called by handle_connection_background_sense_acs
+function rec=reconPipeline(caseIn,bodyIn,surfIn,dataIn)
 
 %RECONPIPELINE   Runs a reconstruction
 %   RECONPIPELINE(CASEIN,BODYIN,REFEIN,FILEIN)
@@ -10,72 +9,70 @@
 %   ** REC is a recon structure
 %
 
-% %ASSIGN NAMES
-rec.Nam=struct('caseIn',twix_like.hdr.save_path,'bodyIn','','surfIn',twix_like.hdr.fileName,'dataIn',twix_like.hdr.fileName,...
-'bodyInNoExt','','surfInNoExt',twix_like.hdr.fileName,'dataInNoExt',twix_like.hdr.fileName);
+%ASSIGN NAMES
+rec.Nam=struct('caseIn',caseIn,'bodyIn',bodyIn,'surfIn',surfIn,'dataIn',dataIn,...
+'bodyInNoExt',removeExtension(bodyIn,'.dat'),'surfInNoExt',removeExtension(surfIn,'.dat'),'dataInNoExt',removeExtension(dataIn,'.dat'));
 
 %ASSIGN PARAMETERS
 rec=reconAlgorithm(rec);
 typV=['B' 'S' 'x'];
 
-% if isempty(rec.Nam.bodyIn)
-    n0=2; % target scan with ACS, process ACS first as the reference, then the imaging data with SENSE recon
-%     fprintf('No body coil\n');
-% end
+if isempty(rec.Nam.bodyIn)
+    n0=2;
+    fprintf('No body coil\n');
+end
 
 for n=n0:3
-%     if n==1 && exist(fullfile(caseIn,sprintf('%s_B.nii.gz',rec.Nam.bodyInNoExt)),'file') && rec.Pip.readFromFile(1)
-%         [rec.B,rec.Geom.B.MS,rec.Geom.B.MT]=readnii(fullfile(caseIn,sprintf('%s_B',rec.Nam.bodyInNoExt)));
-%         fprintf('Reading %s from file\n',typV(n));
-%         continue;
-%     end
-%     if n==2 && exist(fullfile(caseIn,sprintf('%s_S.nii.gz',rec.Nam.surfInNoExt)),'file') && rec.Pip.readFromFile(2)
-%         [rec.S,rec.Geom.S.MS,rec.Geom.S.MT]=readnii(fullfile(caseIn,sprintf('%s_S',rec.Nam.surfInNoExt)));       
-%         rec.M=readnii(fullfile(caseIn,sprintf('%s_M',rec.Nam.surfInNoExt)));
-%         rec.B=readnii(fullfile(caseIn,sprintf('%s_B',rec.Nam.surfInNoExt)));
-%         fprintf('Reading %s from file\n',typV(n));
-%         continue;
-%     end
-%     if n==3 && exist(fullfile(caseIn,sprintf('%s_S.nii.gz',rec.Nam.dataInNoExt)),'file') && rec.Pip.readFromFile(3) && rec.Alg.useBuiltInCalibration
-%         if rec.Alg.useBuiltInCalibration==2
-%             [rec.S,rec.Geom.S.MS,rec.Geom.S.MT]=readnii(fullfile(caseIn,sprintf('%s_S',rec.Nam.dataInNoExt)));
-%             rec.M=readnii(fullfile(caseIn,sprintf('%s_M',rec.Nam.dataInNoExt)));
-%             rec.B=readnii(fullfile(caseIn,sprintf('%s_B',rec.Nam.dataInNoExt)));
-%             rec.xS=readnii(fullfile(caseIn,sprintf('%s_xS',rec.Nam.dataInNoExt)));
-%             NC=size(rec.B,4);NS=size(rec.S);
-%             rec.S=reshape(rec.S,[NS(1:3) NS(4)/NC NC]);
-%         end
-%         if exist(fullfile(caseIn,sprintf('%s_PS.nii.gz',rec.Nam.dataInNoExt)),'file');[rec.PS,rec.Geom.PS.MS,rec.Geom.PS.MT]=readnii(fullfile(caseIn,sprintf('%s_PS',rec.Nam.dataInNoExt)));end
-%         fprintf('Reading %s from file\n',typV(n));
-%     end
-%     fprintf('Processing %s\n',typV(n));
-    
+    if n==1 && exist(fullfile(caseIn,sprintf('%s_B.nii.gz',rec.Nam.bodyInNoExt)),'file') && rec.Pip.readFromFile(1)
+        [rec.B,rec.Geom.B.MS,rec.Geom.B.MT]=readnii(fullfile(caseIn,sprintf('%s_B',rec.Nam.bodyInNoExt)));
+        fprintf('Reading %s from file\n',typV(n));
+        continue;
+    end
+    if n==2 && exist(fullfile(caseIn,sprintf('%s_S.nii.gz',rec.Nam.surfInNoExt)),'file') && rec.Pip.readFromFile(2)
+        [rec.S,rec.Geom.S.MS,rec.Geom.S.MT]=readnii(fullfile(caseIn,sprintf('%s_S',rec.Nam.surfInNoExt)));       
+        rec.M=readnii(fullfile(caseIn,sprintf('%s_M',rec.Nam.surfInNoExt)));
+        rec.B=readnii(fullfile(caseIn,sprintf('%s_B',rec.Nam.surfInNoExt)));
+        fprintf('Reading %s from file\n',typV(n));
+        continue;
+    end
+    if n==3 && exist(fullfile(caseIn,sprintf('%s_S.nii.gz',rec.Nam.dataInNoExt)),'file') && rec.Pip.readFromFile(3) && rec.Alg.useBuiltInCalibration
+        if rec.Alg.useBuiltInCalibration==2
+            [rec.S,rec.Geom.S.MS,rec.Geom.S.MT]=readnii(fullfile(caseIn,sprintf('%s_S',rec.Nam.dataInNoExt)));
+            rec.M=readnii(fullfile(caseIn,sprintf('%s_M',rec.Nam.dataInNoExt)));
+            rec.B=readnii(fullfile(caseIn,sprintf('%s_B',rec.Nam.dataInNoExt)));
+            rec.xS=readnii(fullfile(caseIn,sprintf('%s_xS',rec.Nam.dataInNoExt)));
+            NC=size(rec.B,4);NS=size(rec.S);
+            rec.S=reshape(rec.S,[NS(1:3) NS(4)/NC NC]);
+        end
+        if exist(fullfile(caseIn,sprintf('%s_PS.nii.gz',rec.Nam.dataInNoExt)),'file');[rec.PS,rec.Geom.PS.MS,rec.Geom.PS.MT]=readnii(fullfile(caseIn,sprintf('%s_PS',rec.Nam.dataInNoExt)));end
+        fprintf('Reading %s from file\n',typV(n));
+    end
+    fprintf('Processing %s\n',typV(n));
 
     %READ
     tsta=tic;  
-    [rec,cont]=reconRead_inline(rec,n,twix_like);  
-%     [rec,cont]=reconRead(rec,n,twix_like);    
+    [rec,cont]=reconRead(rec,n);    
     tend=toc(tsta);
     fprintf('Time reading %s: %.2f\n',typV(n),tend);
     if cont;continue;end
 
     %INVERT
     tsta=tic;
-    rec=reconInvert_inline(rec,n);
+    rec=reconInvert(rec,n);
     fprintf('Time inverting %s: %.2f\n',typV(n),toc(tsta));
     
     %RECONSTRUCT
     tsta=tic;
     rec=reconReconstruct(rec,n);
     fprintf('Time reconstructing %s: %.2f\n',typV(n),toc(tsta));
-    
+
     %WRITE
     tsta=tic;
-    rec=reconWrite_inline(rec,n,'final');
+    rec=reconWrite(rec,n);
     fprintf('Time writing %s: %.2f\n',typV(n),toc(tsta));
 end
 
-% if nargout<1;rec=[];end
+if nargout<1;rec=[];end
 
 return
 % % %%%%%HEREHEREHERE---CHECK HOW TO BUILD THE REFERENCE DATA

