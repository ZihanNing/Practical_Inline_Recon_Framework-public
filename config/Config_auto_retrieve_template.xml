<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <version>2</version>

  <readers>
    <reader>
      <classname>AcquisitionReader</classname>
      <dll>gadgetron_core_readers</dll>
    </reader>
    
    <reader>
      <classname>WaveformReader</classname>
      <dll>gadgetron_core_readers</dll>
    </reader>
  </readers>

  <stream>
      
    <!-- Noise prewhitening -->
    <gadget><name>NoiseAdjust</name><dll>gadgetron_mricore</dll><classname>NoiseAdjustGadget</classname></gadget>

    <!-- RO asymmetric echo handling -->
    <gadget><name>AsymmetricEcho</name><dll>gadgetron_mricore</dll><classname>AsymmetricEchoAdjustROGadget</classname></gadget>
 
    <!-- RO oversampling removal -->
    <gadget><name>RemoveROOversampling</name><dll>gadgetron_mricore</dll><classname>RemoveROOversamplingGadget</classname></gadget>
    
    <gadget> 
      <classname>AcquisitionAccumulateTriggerGadget</classname>
      <dll>gadgetron_mricore</dll>
      <property name="trigger_dimension" value="repetition"/>
      <!--<property name="trigger_dimension" value="slice"/>-->
    </gadget>
    
    <!-- For retrieval scan, we do the kspace gridding with default BucketToBuffer gadget-->
    <gadget>
      <classname>BucketToBufferGadget</classname>
      <dll>gadgetron_mricore</dll>
    </gadget>
    
    <!-- Prep ref -->
    <gadget>
        <name>PrepRef</name>
        <dll>gadgetron_mricore</dll>
        <classname>GenericReconCartesianReferencePrepGadget</classname>

        <!-- parameters for debug and timing -->
        <property><name>debug_folder</name><value></value></property>
        <property><name>perform_timing</name><value>true</value></property>
        <property><name>verbose</name><value>true</value></property>

        <!-- averaging across repetition -->
        <property><name>average_all_ref_N</name><value>true</value></property>
        <!-- every set has its own kernels -->
        <property><name>average_all_ref_S</name><value>true</value></property>
        <!-- whether always to prepare ref if no acceleration is used -->
        <property><name>prepare_ref_always</name><value>true</value></property>
    </gadget>

    <!--Stream the lines to the external port-->
    <!--ZN: instead of connecting to a port that listened, launch matlab with specific handler (usually Read&Save hander) using the Gadgetron client directly-->
    <!--    The MATLAB will be launched on the background for computation automatically without UI, use log file under /log for status monitoring -->
    <!--    Please make sure that the handler to be used has been placed under the root of the framework folder, and MATLAB is set to be launched under the same folder -->
    <external>
      <!-- Change the handler if needed (demos in /matlab_handle_archive )-->
      <execute name="handle_connection_retrieval_template" type="matlab"/>
    </external> 
    
    <gadget>
      <dll>gadgetron_mricore</dll>
      <classname>AutoScaleGadget</classname>
    </gadget>

    <gadget>
      <dll>gadgetron_mricore</dll>
      <classname>FloatToUShortGadget</classname>
    </gadget>

    <gadget>
      <dll>gadgetron_mricore</dll>
      <classname>ImageFinishGadget</classname>
    </gadget>
    
  </stream>

  <writers>
    <writer>
      <classname>ImageWriter</classname>
      <dll>gadgetron_core_writers</dll>
    </writer>
  </writers>

</configuration>